create the basic socket io netowrk

use peerjs to create a uniqe id to each client

use uuid v4 to create rooms with uniqe id

to handle it with express we will prob have to redirect to something like that:
NormalUrl/multiplayer/uuidV4

for the other user joining we can prompt a name request and than redirect to the same page
with the extra search param. we will also add him in the second entry to users database with 
the uniqe peerjs id and his name. param add example:

var url = new URL("http://foo.bar/?x=1&y=2");
// If your expected result is "http://foo.bar/?x=1&y=2&x=42"
url.searchParams.append('x', 42);

than we will start laying the surface to our chat and game, set certain emits
and respond properly. emit message for chat and game for a move. 




TO DO LIST:

-Done 1. change the room schema to include the game state and turns

-Done 2. change the code in the server so that it updates turns and game state on each move made

-Done 3. change the code in the server so that when someone makes an illegal it will emit 
a correction with the game state from the database

-Done 4. change the code in the server so that it properly checks the whos turn is it

5. Take care of restarting the game

6. start working on the bot!!!!!!!!!!!!!!




//this method for add data to subdocument
BlogPost.findById(req.params.postId, function (err, post) {
    var subDoc = post.comments.id(req.params.commentId);
    subDoc = req.body;
    post.save(function (err) {
        if (err) return res.status(500).send(err);
        res.send(post);
    });
});

// alternative second method you can use this
BlogPost.findOneAndUpdate({_id: req.params.postId}, {$push:{ subDoc: req.body }}, (err, doc) => {
  	// do something here
});